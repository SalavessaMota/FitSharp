@model FitSharp.Models.AdminEditUserViewModel
@{
    ViewData["Title"] = "EditUser";
}

<div class="row">
    <div class="col-md-4 offset-md-4 transparent-card">
        <h2>Edit User Information</h2>

        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly"></div>
            <input type="hidden" asp-for="UserType" />

            <!-- Campos comuns para todos os usuários -->
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" type="file" class="form-control" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="FirstName">First Name</label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="LastName">Last Name</label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="CountryId" class="control-label"></label>
                <select asp-for="CountryId" asp-items="Model.Countries" class="form-control"></select>
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CityId" class="control-label"></label>
                <select asp-for="CityId" asp-items="Model.Cities" class="form-control"></select>
                <span asp-validation-for="CityId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Address">Address</label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-warning"></span>
            </div>

            <!-- Campos específicos para Customer -->
            @if (Model.UserType == "Customer")
            {
                <div class="form-group">
                    <label asp-for="MembershipId" class="control-label">Membership</label>
                    <select asp-for="MembershipId" asp-items="Model.Memberships" class="form-control"></select>
                    <span asp-validation-for="MembershipId" class="text-danger"></span>
                </div>
            }

            <!-- Campos específicos para Employee -->
            @if (Model.UserType == "Employee")
            {
                <div class="form-group">
                    <label asp-for="GymId" class="control-label">Gym</label>
                    <select asp-for="GymId" asp-items="Model.Gyms" class="form-control"></select>
                    <span asp-validation-for="GymId" class="text-danger"></span>
                </div>
            }

            <!-- Campos específicos para Instructor -->
            @if (Model.UserType == "Instructor")
            {
                <div class="form-group">
                    <label asp-for="GymId" class="control-label">Gym</label>
                    <select asp-for="GymId" asp-items="Model.Gyms" class="form-control"></select>
                    <span asp-validation-for="GymId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Speciality">Speciality</label>
                    <input asp-for="Speciality" class="form-control" />
                </div>

                <div class="form-group">
                    <label asp-for="Description">Description</label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary shadow" />
                <a href="~/Admin/index" class="btn btn-primary roundedwithshadow"><i class="fas fa-list"></i> Return to users list</a>
            </div>

            <div class="text-success">
                @ViewBag.UserMessage
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script type="text/javascript">
        $(document).ready(function () {
            var selectedCountry = '@Model.CountryId';
            var selectedCity = '@Model.CityId';
            var selectedMembership = '@Model.MembershipId';

            // Função para carregar as cidades com base no countryId e pré-selecionar a cidade
            function loadCities(countryId, selectedCity) {
                $("#CityId").empty();
                $.ajax({
                    url: '@Url.Action("GetCitiesAsync", "Account")',
                    type: 'POST',
                    dataType: 'json',
                    data: { countryId: countryId },
                    success: function (response) {
                        $("#CityId").append('<option value="0">(Select a city...)</option>');

                        if (response && response.length > 0) {
                            $.each(response, function (i, city) {
                                $("#CityId").append('<option value="' + city.id + '">' + city.name + '</option>');
                            });

                            if (selectedCity) {
                                $("#CityId").val(selectedCity);
                            }
                        } else {
                            console.warn("No cities found in the response.");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Failed to retrieve cities: ' + error);
                    }
                });
            }

            // Carrega as cidades automaticamente ao carregar a página com o país pré-selecionado
            if (selectedCountry && selectedCountry !== "0") {
                $("#CountryId").val(selectedCountry);
                loadCities(selectedCountry, selectedCity);
            }

            // Ao mudar o país, carrega as cidades correspondentes
            $("#CountryId").change(function () {
                var countryId = $(this).val();
                if (countryId && countryId !== "0") {
                    loadCities(countryId, null);
                } else {
                    $("#CityId").empty().append('<option value="0">(Select a city...)</option>');
                }
            });

            // Pré-seleciona a Membership
            if (selectedMembership && selectedMembership !== "0") {
                $("#MembershipId").val(selectedMembership);
            }
        });
    </script>
}
