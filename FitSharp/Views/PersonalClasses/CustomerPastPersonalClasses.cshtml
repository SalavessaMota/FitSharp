@model IEnumerable<FitSharp.Data.Entities.PersonalClass>
@{
    ViewData["Title"] = "CustomerPastPersonalClasses";
}

<div class="row">
    <div class="col-12">
        <div class="card transparent-card">
            <div class="card-header">
                <h3 class="card-title">Personal Classes</h3>
            </div>
            <div class="card-body">
                <table class="table table-hover table-striped" id="MyTable">
                    <thead>
                        <!-- Primeira linha: Títulos das colunas com ordenação -->
                        <tr>
                            <th>Class</th>
                            <th>Room</th>
                            <th>Instructor</th>
                            <th>Start Time</th>
                            <th>End Time</th>
                            <th></th>
                        </tr>
                        <!-- Segunda linha: Campos de pesquisa por coluna -->
                        <tr>
                            <th><input type="text" placeholder="Search Class" class="form-control" /></th>
                            <th><input type="text" placeholder="Search Room" class="form-control" /></th>                            
                            <th><input type="text" placeholder="Search Instructor" class="form-control" /></th>
                            <th><input type="text" placeholder="Search Start Time" class="form-control" /></th>
                            <th><input type="text" placeholder="Search End Time" class="form-control" /></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Room.Name)</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Instructor.User.FullName)
                                    <br/>
                                    @{var review = item.Instructor.Reviews.FirstOrDefault(r => r.CustomerId == item.CustomerId);}

                                    @if(review != null)
                                    {
                                        <a asp-controller="Reviews" asp-action="Edit" asp-route-id="@review.Id" class="btn btn-link">
                                            <i class="far fa-edit ml-0"></i> Edit Review
                                        </a>
                                    }else
                                    {
                                        <a asp-controller="Reviews" asp-action="WriteReview" asp-route-instructorId="@item.Instructor.Id" class="btn btn-link">
                                            <i class="far fa-edit ml-0"></i> Write Review
                                        </a>
                                    }

                                    @* <a asp-controller="Reviews" asp-action="WriteReview" asp-route-instructorId="@item.Instructor.Id" class="btn btn-link"><i class="far fa-edit ml-0"></i>Review</a> *@
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.StartTime)</td>
                                <td>@Html.DisplayFor(modelItem => item.EndTime)</td>
                                <td>
                                    
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="text-center">
                <a href="~/Home/index" class="btn btn-primary btn-lg mt-3 roundedwithshadow"><i class="fas fa-home"></i> Return Home</a>
            </div>
        </div>
    </div>
</div>


<div id="deleteDialog" class="modal fade">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete</h4>
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-window-close"></i></button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete this personal class?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="btnYesDelete">Delete</button>
                <button type="button" class="btn btn-success" id="btnNoDelete">No</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.25/js/dataTables.bootstrap4.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // Aplica o filtro imediatamente ao mudar a seleção no dropdown
            $('#classFilter').change(function () {
                var selectedFilter = $(this).val();
                window.location.href = '@Url.Action("Index")' + '?filter=' + selectedFilter;
            });

            // Configuração do diálogo de delete
            var id = 0;
            $('a.btnDelete').click(function () {
                id = $(this).data('id');
                $("#deleteDialog").modal('show');
                return false;
            });

            $("#btnNoDelete").click(function () {
                $("#deleteDialog").modal('hide');
                return false;
            });

            $("#btnYesDelete").click(function () {
                window.location.href = '/PersonalClasses/Delete/' + id;
            });

            // Inicializar DataTable com pesquisa individual por coluna
            var table = $('#MyTable').DataTable({
                orderCellsTop: true,
                initComplete: function () {
                    var api = this.api();

                    // Aplicar o filtro para cada coluna com base na segunda linha do thead
                    api.columns().every(function () {
                        var column = this;
                        $('input', $(column.header()).closest('thead').find('tr:eq(1) th').eq(column.index())).on('keyup change clear', function () {
                            if (column.search() !== this.value) {
                                column.search(this.value).draw();
                            }
                        });
                    });
                }
            });
        });
    </script>
}