@model FitSharp.Data.Entities.Membership

@{
    ViewData["Title"] = "Purchase Membership";
}

@inject FitSharp.Data.IUserRepository _userRepository
@inject FitSharp.Helpers.IUserHelper _userHelper

@{
    bool hasRemainingTime = false;
    var customer = await _userRepository.GetCustomerByUserName(User.Identity.Name);
    hasRemainingTime = customer?.MembershipEndDate > DateTime.Now;
}

<div class="transparent-card">
    <h2>Purchase Membership</h2>
    <hr />
    @if (ViewBag.SuccessMessage != null)
    {
            <div class="alert alert-success">
            @ViewBag.SuccessMessage
            </div>
    }
    @if (ViewBag.ErrorMessage != null)
    {
            <div class="alert alert-danger">
            @ViewBag.ErrorMessage
            </div>
    }

    <div>
        <h4>Membership</h4>
        <hr />

        @Html.HiddenFor(n => n.Id)
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.NumberOfClasses)
            </dt>
            <dd class="col-sm-10">
                @(Model.NumberOfClasses == 999999999 ? "Unlimited" : Model.NumberOfClasses.ToString())
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Price)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Price)€
            </dd>
        </dl>
    </div>

    @if (hasRemainingTime)
    {
        <div>
            <p class="text-logo-primary">You still have time left on your current membership. Purchasing a new one will replace your current one.</p>
        </div>
    }

<div class="wrapper">
    <div class="checkout container">
        <form asp-action="PurchaseMembership" method="post" id="payment-form">
            @Html.HiddenFor(n => n.Id)
            @Html.HiddenFor(n => n.Price)
            <input type="hidden" name="id" value="@Model.Id" />
            <section>
                <div class="bt-drop-in-wrapper">
                    <div id="bt-dropin"></div>
                </div>
            </section>
            @Html.HiddenFor(n => n.Nonce, new { @id = "nonce" })
            <hr />
                <button class="btn btn-primary btn-lg mt-3 roundedwithshadow" type="submit">
                Confirm payment - @Model.Price €
            </button>
        </form>
    </div>
    </div>
</div>

<script src="https://js.braintreegateway.com/web/dropin/1.22.0/js/dropin.min.js"></script>
<script>
    var client_token = "@ViewBag.ClientToken";
    var form = document.querySelector('#payment-form');

    braintree.dropin.create({
        authorization: client_token,
        container: '#bt-dropin'
    }, function (createErr, instance) {
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            instance.requestPaymentMethod(function (err, payload) {
                if (err) {
                    return;
                }

                document.querySelector('#nonce').value = payload.nonce;
                form.submit();
            });
        });
    });
</script>