@model IEnumerable<FitSharp.Data.Entities.Membership>
@{
    ViewData["Title"] = "Available Memberships";
}

@inject FitSharp.Data.IUserRepository _userRepository

@{
    FitSharp.Data.Entities.Customer customer = null;
    bool hasRemainingTime = false;
    bool isAuthenticated = User.Identity.IsAuthenticated;

    if (isAuthenticated)
    {
        customer = await _userRepository.GetCustomerByUserName(User.Identity.Name);
        hasRemainingTime = customer?.MembershipEndDate > DateTime.Now;
    }
}

<div class="transparent-card">
    <div class="flash-message">
        <flash dismissable="true" />
    </div>

    @if (customer != null && customer.Membership != null)
    {
        <div class="current-membership mb-4 transparent-card">
            <h3 class="text-logo-primary">Your Current Membership</h3>
            <p><strong>Name:</strong> @customer.Membership.Name</p>
            <p><strong>Description:</strong> @customer.Membership.Description</p>
            <p><strong>Classes Remaining:</strong> @(customer.ClassesRemaining > 1000 ? "Unlimited" : customer.ClassesRemaining.ToString())</p>
            <p><strong>Membership Start Date:</strong> @customer.MembershipBeginDate.ToString("dd/MM/yyyy")</p>
            <p><strong>Membership End Date:</strong> @customer.MembershipEndDate.ToString("dd/MM/yyyy")</p>
        </div>
    }
    else if (isAuthenticated)
    {
        <div class="no-membership mb-4 transparent-card">
            <p>You do not have an active membership.</p>
        </div>
    }

    <h2 class="text-logo-primary">Available Memberships</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of Classes</th>
                <th>Description</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var membership in Model)
            {
                @if (membership.Id != 1)
                {
                    <tr>
                        <td>@membership.Name</td>
                        <td>@(membership.NumberOfClasses == 999999999 ? "Unlimited" : membership.NumberOfClasses.ToString())</td>
                        <td>@membership.Description</td>
                        <td>@membership.Price</td>
                        <td>
                            @if (isAuthenticated)
                            {
                                <form asp-action="PurchaseMembership" method="post" id="purchaseForm-@membership.Id">
                                    <input type="hidden" name="membershipId" value="@membership.Id" />
                                    <button type="submit" class="btn btn-primary purchase-button" data-membership-id="@membership.Id">Purchase</button>
                                </form>
                            }
                            else
                            {
                                <button class="btn btn-primary trial-info-button">Purchase</button>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Modal for Unauthenticated Users -->
<div class="modal fade" id="trialInfoModal" tabindex="-1" role="dialog" aria-labelledby="trialInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Start with a Free Trial!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Register now to receive a free trial membership, which includes access to 2 classes over a 1-month period!
            </div>
            <div class="modal-footer">
                <a href="/Account/Register" class="btn btn-primary">Register Now</a>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Users with Remaining Membership Time -->
<div class="modal fade" id="remainingTimeModal" tabindex="-1" role="dialog" aria-labelledby="remainingTimeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Remaining Membership Time</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                You still have time left on your current membership. Are you sure you want to purchase a new one?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" id="confirmNewPurchaseButton" class="btn btn-primary">Confirm Purchase</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const isAuthenticated = '@isAuthenticated'.toLowerCase() === 'true';
            const hasRemainingTime = '@hasRemainingTime'.toLowerCase() === 'true';

            document.querySelectorAll('.trial-info-button').forEach(button => {
                button.addEventListener('click', function () {
                    $('#trialInfoModal').modal('show');
                });
            });

            const purchaseButtons = document.querySelectorAll('.purchase-button');
            purchaseButtons.forEach(function (button) {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    const membershipId = button.getAttribute('data-membership-id');

                    if (hasRemainingTime) {
                        $('#remainingTimeModal').modal('show');

                        $('#confirmNewPurchaseButton').off('click').on('click', function () {
                            document.getElementById('purchaseForm-' + membershipId).submit();
                        });
                    } else {
                        document.getElementById('purchaseForm-' + membershipId).submit();
                    }
                });
            });

            const flashMessage = document.querySelector('.flash-message');
            if (flashMessage) {
                setTimeout(() => {
                    flashMessage.style.transition = "opacity 0.5s ease";
                    flashMessage.style.opacity = "0";
                    setTimeout(() => flashMessage.remove(), 500);
                }, 4000);
            }
        });
    </script>
}
